-- MySQL Script generated by MySQL Workbench
-- Thu Sep 22 11:57:07 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TestBenchDataBase
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TestBenchDataBase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TestBenchDataBase` DEFAULT CHARACTER SET utf8 ;
USE `TestBenchDataBase` ;

-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`models`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`models` (
  `id_model` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `model_number` CHAR(40) NOT NULL,
  `firmware` MEDIUMBLOB NOT NULL,
  `bootloader` MEDIUMBLOB NOT NULL,
  `xbee_firmware` MEDIUMBLOB NOT NULL,
  `electrical_test` MEDIUMBLOB NOT NULL,
  `functional_test` MEDIUMBLOB NOT NULL,
  `valid_model` VARCHAR(3) NOT NULL DEFAULT 'yes',
  `date_creation` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `date_update` TIMESTAMP NULL,
  PRIMARY KEY (`id_model`),
  UNIQUE INDEX `id_model_UNIQUE` (`id_model` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`batchs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`batchs` (
  `id_batch` MEDIUMINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `batch_reference` VARCHAR(45) NOT NULL,
  `size` SMALLINT UNSIGNED NOT NULL,
  `model_id` SMALLINT UNSIGNED NOT NULL,
  `description` TINYTEXT NULL,
  `number_electrical_ok` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  `number_electrical_nok` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  `number_functional_ok` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  `number_functional_nok` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  `batch_date_start` TIMESTAMP NULL,
  `batch_date_end` TIMESTAMP NULL,
  PRIMARY KEY (`id_batch`, `model_id`),
  UNIQUE INDEX `id_batch_UNIQUE` (`id_batch` ASC) VISIBLE,
  INDEX `fk_models_id_model_idx` (`model_id` ASC) VISIBLE,
  UNIQUE INDEX `batch_reference_UNIQUE` (`batch_reference` ASC) VISIBLE,
  CONSTRAINT `fk_models_id_model`
    FOREIGN KEY (`model_id`)
    REFERENCES `TestBenchDataBase`.`models` (`id_model`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`serial_numbers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`serial_numbers` (
  `id_serial_number` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `batch_id` MEDIUMINT UNSIGNED NOT NULL,
  `year` SMALLINT NOT NULL,
  `week` SMALLINT NOT NULL,
  `identifiant` SMALLINT UNSIGNED NOT NULL,
  `affected` VARCHAR(3) NOT NULL DEFAULT 'no',
  PRIMARY KEY (`id_serial_number`, `batch_id`),
  UNIQUE INDEX `id_serial_number_UNIQUE` (`id_serial_number` ASC) VISIBLE,
  INDEX `fk_batchs_id_batch_idx` (`batch_id` ASC) VISIBLE,
  CONSTRAINT `fk_batchs_id_batch`
    FOREIGN KEY (`batch_id`)
    REFERENCES `TestBenchDataBase`.`batchs` (`id_batch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`products` (
  `id_product` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `serial_number_id` INT UNSIGNED NULL,
  `batch_id` MEDIUMINT UNSIGNED NULL,
  `model_id` SMALLINT UNSIGNED NULL,
  `mac_address` VARCHAR(23) NULL,
  `electrical_result` VARCHAR(3) NULL,
  `electrical_date` TIMESTAMP NULL,
  `electrical_count` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  `functional_result` VARCHAR(3) NULL,
  `functional_date` TIMESTAMP NULL,
  `functional_count` SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_product`),
  UNIQUE INDEX `id_product_UNIQUE` (`id_product` ASC) VISIBLE,
  UNIQUE INDEX `serial_number_id_UNIQUE` (`serial_number_id` ASC) VISIBLE,
  INDEX `fk_models_id_model_product_idx` (`model_id` ASC) VISIBLE,
  INDEX `fk_batchs_id_batch_product_idx` (`batch_id` ASC) VISIBLE,
  CONSTRAINT `fk_models_id_model_product`
    FOREIGN KEY (`model_id`)
    REFERENCES `TestBenchDataBase`.`models` (`id_model`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_batchs_id_batch_product`
    FOREIGN KEY (`batch_id`)
    REFERENCES `TestBenchDataBase`.`batchs` (`id_batch`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_serial_number`
    FOREIGN KEY (`serial_number_id`)
    REFERENCES `TestBenchDataBase`.`serial_numbers` (`id_serial_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`manufacturers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`manufacturers` (
  `id_manufacturer` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `manufacturer_name` TINYTEXT NOT NULL,
  `location` TINYTEXT NOT NULL,
  PRIMARY KEY (`id_manufacturer`),
  UNIQUE INDEX `id_manufacturer_UNIQUE` (`id_manufacturer` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`test_benchs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`test_benchs` (
  `id_test_bench` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `manufacturer_id` SMALLINT UNSIGNED NULL,
  `type` VARCHAR(10) NOT NULL DEFAULT 'Electrical',
  `computer_serial_number` VARCHAR(100) NOT NULL,
  `date_creation` TIMESTAMP NULL,
  `date_last_calibration` TIMESTAMP NULL,
  PRIMARY KEY (`id_test_bench`),
  UNIQUE INDEX `id_test_bench_UNIQUE` (`id_test_bench` ASC) VISIBLE,
  INDEX `fk_manufacturers_id_manufacturer_test_benchs_idx` (`manufacturer_id` ASC) VISIBLE,
  CONSTRAINT `fk_manufacturers_id_manufacturer_test_benchs`
    FOREIGN KEY (`manufacturer_id`)
    REFERENCES `TestBenchDataBase`.`manufacturers` (`id_manufacturer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`tests`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`tests` (
  `id_test` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `test` TINYTEXT NOT NULL,
  PRIMARY KEY (`id_test`),
  UNIQUE INDEX `id_test_UNIQUE` (`id_test` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`logs` (
  `id_log` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `test_id` SMALLINT UNSIGNED NOT NULL,
  `product_id` INT UNSIGNED NOT NULL,
  `date` TIMESTAMP NOT NULL,
  `test_bench_id` SMALLINT UNSIGNED NOT NULL,
  `result` VARCHAR(3) NOT NULL,
  `value` FLOAT NULL,
  `min_value` FLOAT NULL,
  `max_value` FLOAT NULL,
  `unit` VARCHAR(20) NULL,
  `details` VARCHAR(50) NULL,
  PRIMARY KEY (`id_log`, `test_bench_id`, `product_id`, `test_id`),
  UNIQUE INDEX `id_test_UNIQUE` (`id_log` ASC) VISIBLE,
  INDEX `products_id_product_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_test_benchs_id_test_bench_idx` (`test_bench_id` ASC) VISIBLE,
  INDEX `fk_logs_tests1_idx` (`test_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_id_product`
    FOREIGN KEY (`product_id`)
    REFERENCES `TestBenchDataBase`.`products` (`id_product`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_benchs_id_test_bench`
    FOREIGN KEY (`test_bench_id`)
    REFERENCES `TestBenchDataBase`.`test_benchs` (`id_test_bench`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_test_id`
    FOREIGN KEY (`test_id`)
    REFERENCES `TestBenchDataBase`.`tests` (`id_test`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`reworks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`reworks` (
  `id_rework` SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `designator` TINYTEXT NOT NULL,
  `operation` TINYTEXT NOT NULL,
  PRIMARY KEY (`id_rework`),
  UNIQUE INDEX `id_rework_UNIQUE` (`id_rework` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TestBenchDataBase`.`products_has_reworks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TestBenchDataBase`.`products_has_reworks` (
  `product_id` INT UNSIGNED NOT NULL,
  `rework_id` SMALLINT UNSIGNED NOT NULL,
  `date` TIMESTAMP NOT NULL,
  PRIMARY KEY (`product_id`, `rework_id`),
  INDEX `fk_products_has_reworks_reworks1_idx` (`rework_id` ASC) VISIBLE,
  INDEX `fk_products_has_reworks_products_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_has_reworks_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `TestBenchDataBase`.`products` (`id_product`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_reworks_reworks`
    FOREIGN KEY (`rework_id`)
    REFERENCES `TestBenchDataBase`.`reworks` (`id_rework`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
